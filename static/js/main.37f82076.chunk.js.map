{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactItem.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","hooks/useLocalStorage.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["module","exports","useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","Section","title","children","className","s","SectionTitle","ContactForm","onAdd","onCheckContact","name","setName","number","setNumber","nameInputId","uuidv4","numberInputId","handleChange","e","target","value","onSubmit","preventDefault","isValidatedForm","id","InputOverlay","InputLabel","htmlFor","Input","type","onChange","pattern","required","FormButton","Filter","filterInputId","FilterLabel","FilterInput","ContactItem","onDeleteContact","ContactItemText","DeleteBtn","onClick","ContactList","contacts","map","contact","App","setContacts","filter","setFilter","filteredContacts","setFilteredContacts","toLowerCase","includes","prevState","isExistContact","find","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37f82076.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__fFfe7\",\"InputOverlay\":\"ContactForm_InputOverlay__2X7Ur\",\"InputLabel\":\"ContactForm_InputLabel__24h2y\",\"Input\":\"ContactForm_Input__2uNqP\",\"FormButton\":\"ContactForm_FormButton__1hgEG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterLabel\":\"Filter_FilterLabel__26Llt\",\"FilterInput\":\"Filter_FilterInput__1hpSt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem_ContactItem__-nRzL\",\"ContactItemText\":\"ContactItem_ContactItemText__2iVK9\",\"DeleteBtn\":\"ContactItem_DeleteBtn__XVnxD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__3G9Hz\",\"SectionTitle\":\"Section_SectionTitle__2sfaC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__1tRKt\"};","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nexport default useLocalStorage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.Section}>\n      <h2 className={s.SectionTitle}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nimport useLocalStorage from '../../hooks/useLocalStorage';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onAdd, onCheckContact }) {\n  const [name, setName] = useLocalStorage('name', '');\n  const [number, setNumber] = useLocalStorage('number', '');\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isValidatedForm = onCheckContact(name);\n    if (!isValidatedForm) {\n      return;\n    }\n\n    isValidatedForm && onAdd({ id: uuidv4(), name: name, number: number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.ContactForm} onSubmit={handleSubmit}>\n      <div className={s.InputOverlay}>\n        <label className={s.InputLabel} htmlFor={nameInputId}>\n          Name\n        </label>\n        <input\n          className={s.Input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          id={nameInputId}\n          required\n        />\n      </div>\n\n      <div className={s.InputOverlay}>\n        <label className={s.InputLabel} htmlFor={numberInputId}>\n          Number\n        </label>\n        <input\n          className={s.Input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          id={numberInputId}\n          required\n        />\n      </div>\n\n      <button className={s.FormButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n  onCheckContact: PropTypes.func.isRequired,\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  const filterInputId = uuidv4();\n\n  return (\n    <div className={s.InputOverlay}>\n      <label htmlFor={filterInputId} className={s.FilterLabel}>\n        Find contacts by name\n      </label>\n      <input\n        className={s.FilterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        id={filterInputId}\n      ></input>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className={s.ContactItem}>\n      <p className={s.ContactItemText}>\n        {name}: {number}\n      </p>\n\n      <button\n        className={s.DeleteBtn}\n        id={id}\n        type=\"button\"\n        onClick={onDeleteContact}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ContactItem from './ContactItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.ContactList}>\n      {contacts &&\n        contacts.map(contact => {\n          return (\n            <ContactItem\n              key={contact.id}\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n              onDeleteContact={onDeleteContact}\n            />\n          );\n        })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nimport Section from './Section';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useLocalStorage('filter', '');\n  const [filteredContacts, setFilteredContacts] = useState('');\n\n  useEffect(() => {\n    setFilteredContacts(() => {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter),\n      );\n    });\n  }, [contacts, filter]);\n\n  const handleAddContact = contact => {\n    setContacts(prevState => {\n      return [contact, ...prevState];\n    });\n  };\n\n  const handleDeleteContact = e => {\n    const { id } = e.target;\n\n    setContacts(prevState => {\n      return prevState.filter(contact => contact.id !== id);\n    });\n  };\n\n  const handleCheckUniqueContact = name => {\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n\n    isExistContact && alert('Contact is already exist!');\n\n    return !isExistContact;\n  };\n\n  const handleFilterChange = e => {\n    const { value } = e.target;\n\n    setFilter(value.toLowerCase());\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Section>\n        <ContactForm\n          onAdd={handleAddContact}\n          onCheckContact={handleCheckUniqueContact}\n        />\n      </Section>\n\n      <Section title={'Contacts'}>\n        <Filter value={filter} onChange={handleFilterChange} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={handleDeleteContact}\n        />\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}